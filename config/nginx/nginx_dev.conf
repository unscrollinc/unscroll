worker_processes auto;
user nobody nogroup;
pid /tmp/nginx.pid;

# nginx -c"/home/unscroll/unscroll/config/nginx/nginx.conf" -s reload
# gunicorn -p /home/unscroll/socket/gunicorn.sock --bind 0.0.0.0:8000 unscroll.wsgi:application

# or on dev
# nginx -c"/Users/ford/dev/unscroll/config/nginx/nginx_dev.conf" -s reload
# gunicorn -p /tmp/gunicorn.sock --bind 0.0.0.0:8000 unscroll.wsgi:application


events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /tmp/nginx.access.log combined;
  sendfile on;

  access_log /usr/local/var/log/nginx/access.log;
  error_log /usr/local/var/log/nginx/error.log;

  gzip on;
  gzip_disable "msie6";
	
  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/home/unscroll/socket/gunicorn.sock fail_timeout=0;
    server unix:/tmp/gunicorn.sock fail_timeout=0;    

    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
  }

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 80;
    client_max_body_size 10M;

    # set the correct host(s) for your site
    server_name unscroll.com www.unscroll.com;

    keepalive_timeout 5;

    # path for static files

    root /Users/ford/dev/unscroll/unscroll/scrolls/static/scrolls/;

    location / {
        index index.html;
        try_files $uri $uri/ @proxy_to_app;
    }
    
    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://127.0.0.1:8000;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /Users/ford/dev/unscroll/unscroll/scrolls/static/scrolls/;
    }
  }
}
