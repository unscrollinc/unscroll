from django.db import models
from django.contrib.auth.models import User



class MediaType(models.Model):
    """"""
    name = models.CharField(max_length=128,
                            primary_key=True)

    def __unicode__(self):
        return '{}'.format(self.name,)


class ContentType(models.Model):
    """"""
    name = models.CharField(max_length=32,
                            primary_key=True)

    def __unicode__(self):
        return '{}'.format(self.name,)


class Scroll(models.Model):
<<<<<<< HEAD
    """"""
    user = models.ForeignKey(User,
                             null=True,
                             related_name='scrolls')
=======
    user = models.ForeignKey(User, null=True, related_name='scrolls')
>>>>>>> 85292a1d300e63b51cda3f0d88c48d047c1b280f
    publish_datetime = models.DateTimeField(null=True)
    public = models.BooleanField(default=False)
    created = models.DateTimeField(auto_now_add=True)
    title = models.TextField()
    subtitle = models.TextField(blank=True)
    description = models.TextField(null=True)

    def __unicode__(self):
        return '{}'.format(self.title,)
<<<<<<< HEAD

=======
    
>>>>>>> 85292a1d300e63b51cda3f0d88c48d047c1b280f

class Event(models.Model):
    """"""
    scroll = models.ForeignKey(Scroll, related_name='events')
    created = models.DateTimeField(auto_now_add=True)
    mediatype = models.CharField(max_length=128,
                                 default="text/html")
    title = models.CharField(max_length=128)
    text = models.TextField(blank=True)
    ranking = models.FloatField(db_index=True, default=0)
    datetime = models.DateTimeField(db_index=True)
    resolution = models.CharField(max_length=32, default='days')
    source_url = models.URLField(null=True)
    source_date = models.CharField(max_length=128, null=True)
    content_url = models.URLField(null=True)

    class Meta:
        ordering = ['-ranking']

    def __unicode__(self):
        return '{}'.format(self.title,)


class Note(models.Model):
<<<<<<< HEAD
    """"""
    user = models.ForeignKey(User,
                             null=True,
                             related_name="notes")
=======
    user = models.ForeignKey(User, null=True, related_name="notes")
>>>>>>> 85292a1d300e63b51cda3f0d88c48d047c1b280f
    event = models.ForeignKey(Event, null=True, related_name="notes")
    order = models.FloatField(default=0)
    text = models.TextField(null=True)
    display_type = models.ForeignKey(ContentType, null=True)
    created = models.DateTimeField(auto_now_add=True)
    last_updated = models.DateTimeField(auto_now_add=True)

    def __unicode__(self):
        return '{}'.format(self.text,)


class NoteMedia(models.Model):
    """"""
    note = models.ForeignKey(Note, related_name="media")
    media_type = models.ForeignKey(MediaType)
    media_file = models.FileField(upload_to=None)
